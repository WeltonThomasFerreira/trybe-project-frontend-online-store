{"version":3,"sources":["Components/ProductCard/ProductCardClassName.js","Components/SearchInput/SearchInputClassName.js","Components/Categories/CategoriesClassName.js","pages/HomeClassName.js","Components/ButtonCart/ButtonCartClassName.js","Components/AddToCart/AddToCartClassName.js","Components/ProductNotFound/ProductNotFound.jsx","Components/AddToCart/AddToCart.jsx","Components/ProductCard/ProductCard.jsx","Components/SearchInput/SearchInput.jsx","services/api.js","Components/Categories/Categories.jsx","Components/ButtonCart/ButtonCart.jsx","pages/Home.jsx","Components/ProductCart/ProductCart.jsx","pages/Cart.jsx","pages/ProductDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","button","h2","imageContainer","image","p","form","inputContainer","input","searchIcon","asideContainer","aside","h5","header","homeContainer","formContainer","initialMessage","buttonContainer","link","shoppingCartIcon","ProductNotFound","AddToCart","props","selectedProduct","dataTestId","className","data-testid","type","onClick","newCart","cartList","JSON","parse","localStorage","getItem","push","setItem","stringify","addToStorage","ProductCard","products","handleClick","length","map","product","key","id","value","title","src","thumbnail","alt","Intl","NumberFormat","style","currency","format","price","SearchInput","query","handleChange","handleSubmit","onSubmit","name","placeholder","onChange","getCategories","a","fetch","then","categories","json","getProductsFromCategoryAndQuery","categoryId","results","Categories","category","ButtonCart","to","Home","state","selectedCategory","redirect","bind","fetchProducts","fetchCategories","console","log","this","event","target","setState","preventDefault","Component","ProductCart","numberProductsCart","totalPrice","productIncreaseQuantity","productDecreaseQuantity","handlePrice","multiplyPrice","_prevState","removeProduct","width","Cart","importFromStorage","mapProducts","recoveryTotalPrice","shoppingCart","reduce","acc","parentNode","removeChild","emptyCartMessage","priceConverted","ProductDetails","retrieveFromLocalStorage","React","App","basename","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d3c1bae3.chunk.js","sourcesContent":["const container = `flex flex-col content-around max-w-sm\nrounded overflow-hidden shadow-lg w-64 h-72 justify-around`;\nconst button = `flex flex-col content-around max-w-sm rounded\noverflow-hidden shadow-lg w-64 h-72 justify-around\"\ndata-testid=\"product-detail-link`;\nconst h2 = `sm:text-sm sm:leading-snug font-semibold\ntracking-wide uppercase text-grey-600 mb-3`;\nconst imageContainer = 'flex justify-center';\nconst image = 'w-24 object-center';\nconst p = 'justify-self-end';\n\nmodule.exports = {\n  container,\n  button,\n  h2,\n  imageContainer,\n  image,\n  p,\n};\n","const form = 'w-full max-w-sm';\nconst inputContainer = 'flex items-center border-b border-teal-500 py-2';\nconst input = `appearance-none bg-transparent border-none w-full\ntext-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none`;\nconst button = `flex-shrink-0 border-transparent border-4 text-white\nhover:text-white text-sm py-1 px-2 rounded bg-pink-600`;\nconst searchIcon = 'h-5 w-5 text-white-500';\n\nmodule.exports = {\n  form,\n  inputContainer,\n  input,\n  button,\n  searchIcon,\n};\n","const container = `fixed z-40 inset-0 flex-none h-full bg-black bg-opacity-25\nw-full lg:bg-white lg:static lg:h-auto lg:overflow-y-visible\ng:pt-0 lg:w-60 xl:w-72 lg:block hidden`;\nconst asideContainer = `h-full overflow-y-auto scrolling-touch lg:h-auto lg:block\nlg:relative lg:sticky lg:bg-transparent overflow-hidden\nlg:top-18 bg-white mr-24 lg:mr-0`;\nconst aside = `px-1 pt-6 overflow-y-auto font-medium text-base sm:px-3\nxl:px-5 lg:text-sm pb-10 lg:pt-10 lg:pb-14 sticky?lg:h-(screen-18)`;\nconst h5 = `text-gray-900 uppercase tracking-wide\nfont-semibold mb-3 text-sm lg:text-xs`;\nconst input = `bg-transparent hover:bg-pink-500 text-pink-700\nfont-semibold hover:text-white py-2 px-4 hover:border-transparent\nrounded w-64 text-left`;\n\nmodule.exports = {\n  container,\n  asideContainer,\n  aside,\n  h5,\n  input,\n};\n","const homeContainer = `space-y-5 sm:space-y-8\nmd:space-y-10 lg:space-y-11 overflow-hidden`;\nconst header = 'relative z-10 max-w-screen-lg xl:max-w-screen-xl mx-auto';\nconst formContainer = `border-b border-gray-200 py-4 flex items-center\njustify-between -mx-4 px-4 sm:mx-0 sm:px-0`;\nconst initialMessage = 'mt-1 text-lg text-gray-500';\n\nmodule.exports = {\n  header,\n  homeContainer,\n  formContainer,\n  initialMessage,\n};\n","const buttonContainer = 'flex items-center space-x-6 sm:space-x-10 ml-6 sm:ml-10';\nconst link = `text-base leading-6 font-medium hover:text-gray-600\ntransition-colors duration-200 py-2`;\nconst shoppingCartIcon = 'h-9 w-9 text-pink-500 sm:inline';\n\nmodule.exports = {\n  buttonContainer,\n  link,\n  shoppingCartIcon,\n};\n","const button = `bg-green-500 hover:bg-green-700\ntext-white font-bold py-2 px-4 rounded w-full`;\n\nmodule.exports = {\n  button,\n};\n","import React from 'react';\n\nexport default function ProductNotFound() {\n  return (\n    <div>\n      <p>Nenhum produto foi encontrado</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { button } from './AddToCartClassName';\n\nfunction addToStorage(selectedProduct) {\n  let newCart = [];\n  const cartList = JSON.parse(localStorage.getItem('cart'));\n  if (cartList !== null) {\n    newCart = [...cartList];\n  }\n  newCart.push(selectedProduct);\n  localStorage.setItem('cart', JSON.stringify(newCart));\n}\n\nexport default function AddToCart(props) {\n  const { selectedProduct, dataTestId } = props;\n  return (\n    <button\n      className={ button }\n      data-testid={ dataTestId }\n      type=\"button\"\n      onClick={ () => {\n        addToStorage(selectedProduct);\n      } }\n    >\n      Add\n    </button>\n  );\n}\n\nAddToCart.propTypes = {\n  selectedProduct: PropTypes.shape(),\n}.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductNotFound from '../ProductNotFound/ProductNotFound';\nimport AddTocart from '../AddToCart/AddToCart';\nimport '../../pages/home.css';\nimport {\n  container,\n  button,\n  h2,\n  imageContainer,\n  image,\n  p,\n} from './ProductCardClassName';\n\nexport default function ProductCard(props) {\n  const { products, handleClick } = props;\n  if (products.length === []) {\n    return <ProductNotFound />;\n  }\n  return products.map((product) => (\n    <div className={ container } key={ product.id }>\n      <button\n        className={ button }\n        type=\"button\"\n        value={ product.title }\n        data-testid=\"product-detail-link\"\n        onClick={ () => {\n          handleClick(product);\n        } }\n      >\n        <div data-testid=\"product\">\n          <h2 className={ h2 }>{product.title}</h2>\n          <div className={ imageContainer }>\n            <img\n              className={ image }\n              src={ product.thumbnail }\n              alt={ product.title }\n            />\n          </div>\n          <p className={ p }>\n            {new Intl.NumberFormat('pr-BR', {\n              style: 'currency',\n              currency: 'BRL',\n            }).format(product.price)}\n          </p>\n        </div>\n      </button>\n      <AddTocart selectedProduct={ product } dataTestId=\"product-add-to-cart\" />\n    </div>\n  ));\n}\n\nProductCard.propTypes = {\n  products: PropTypes.arrayOf(),\n}.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon } from '@heroicons/react/solid';\nimport {\n  form,\n  inputContainer,\n  input,\n  button,\n  searchIcon,\n} from './SearchInputClassName';\n\nexport default function SearchInput(props) {\n  const { query, handleChange, handleSubmit } = props;\n  return (\n    <form className={ form } onSubmit={ handleSubmit }>\n      <div className={ inputContainer }>\n        <input\n          className={ input }\n          name=\"query\"\n          value={ query }\n          placeholder=\"Pesquisar produtos...\"\n          onChange={ handleChange }\n          data-testid=\"query-input\"\n        />\n        <button className={ button } type=\"submit\" data-testid=\"query-button\">\n          <SearchIcon className={ searchIcon } />\n        </button>\n      </div>\n    </form>\n  );\n}\n\nSearchInput.propTypes = {\n  stateHome: PropTypes.shape({\n    query: PropTypes.string,\n    products: PropTypes.arrayOf(),\n  }),\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n}.isRequired;\n","export async function getCategories() {\n  return fetch('https://api.mercadolibre.com/sites/MLB/categories')\n    .then((categories) => categories.json());\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  return fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`)\n    .then((results) => results.json());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  container,\n  asideContainer,\n  aside,\n  h5,\n  input,\n} from './CategoriesClassName';\n\nexport default function Categories(props) {\n  const { categories, handleChange } = props;\n  if (categories.length === 0) {\n    return null;\n  }\n  return (\n    <div className={ container }>\n      <div className={ asideContainer }>\n        <aside className={ aside }>\n          <h5 className={ h5 }>Categorias:</h5>\n          <ul>\n            {categories.map((category) => (\n              <li key={ category.id }>\n                <input\n                  className={ input }\n                  data-testid=\"category\"\n                  name=\"selectedCategory\"\n                  onClick={ handleChange }\n                  type=\"button\"\n                  value={ category.name }\n                  id={ category.id }\n                />\n              </li>\n            ))}\n          </ul>\n        </aside>\n      </div>\n    </div>\n  );\n}\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(),\n  handleChange: PropTypes.func,\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ShoppingCartIcon } from '@heroicons/react/solid';\nimport { buttonContainer, link, shoppingCartIcon } from './ButtonCartClassName';\n\nexport default function ButtonCart() {\n  return (\n    <div className={ buttonContainer }>\n      <Link className={ link } to=\"/cart\">\n        <button type=\"button\" data-testid=\"shopping-cart-button\">\n          <ShoppingCartIcon className={ shoppingCartIcon } />\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ProductCard from '../Components/ProductCard/ProductCard';\nimport SearchInput from '../Components/SearchInput/SearchInput';\nimport {\n  getCategories,\n  getProductsFromCategoryAndQuery,\n} from '../services/api';\nimport Categories from '../Components/Categories/Categories';\nimport ButtonCart from '../Components/ButtonCart/ButtonCart';\n// import './home.css';\nimport { homeContainer, header, formContainer, initialMessage } from './HomeClassName';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      categories: [],\n      products: [],\n      selectedCategory: '',\n      redirect: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchCategories = this.fetchCategories.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('cart')) {\n      localStorage.setItem('cart', JSON.stringify([]));\n      console.log('criou');\n    }\n    this.fetchCategories();\n  }\n\n  async handleChange(event) {\n    const { name, type, value, id } = event.target;\n    if (type === 'button') {\n      this.setState({ [name]: id }, () => this.fetchProducts());\n    } else {\n      this.setState({ [name]: value });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.fetchProducts();\n  }\n\n  handleClick(product) {\n    localStorage.setItem('selectedProduct', JSON.stringify(product));\n    this.setState({ redirect: true });\n  }\n\n  async fetchCategories() {\n    const categories = await getCategories();\n    this.setState({ categories });\n  }\n\n  async fetchProducts() {\n    const { query, selectedCategory } = this.state;\n    const products = await getProductsFromCategoryAndQuery(\n      selectedCategory,\n      query,\n    );\n    this.setState({ products: products.results });\n  }\n\n  render() {\n    const { products, categories, redirect, query } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/product-details\" />;\n    }\n    return (\n      <div className={ homeContainer }>\n        <header className={ header }>\n          <div\n            className={ formContainer }\n          >\n            <SearchInput\n              handleChange={ this.handleChange }\n              query={ query }\n              handleSubmit={ this.handleSubmit }\n            />\n            <ButtonCart />\n          </div>\n        </header>\n        <main className=\"main-content\">\n          <Categories\n            categories={ categories }\n            handleChange={ this.handleChange }\n          />\n          <section className=\"container-products\">\n            {products.length === 0 && (\n              <p\n                className={ initialMessage }\n                data-testid=\"home-initial-message\"\n              >\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </p>\n            )}\n            <ProductCard products={ products } handleClick={ this.handleClick } />\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './productCart.css';\n\nclass ProductCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberProductsCart: 1,\n      totalPrice: 0,\n    };\n    this.productIncreaseQuantity = this.productIncreaseQuantity.bind(this);\n    this.productDecreaseQuantity = this.productDecreaseQuantity.bind(this);\n    this.handlePrice = this.handlePrice.bind(this);\n    this.multiplyPrice = this.multiplyPrice.bind(this);\n  }\n\n  componentDidMount() {\n    this.handlePrice();\n  }\n\n  handlePrice() {\n    const {\n      product: { price },\n    } = this.props;\n    this.setState({ totalPrice: price });\n  }\n\n  productIncreaseQuantity() {\n    this.setState(\n      (_prevState) => ({\n        numberProductsCart: _prevState.numberProductsCart + 1,\n      }),\n      () => {\n        this.multiplyPrice();\n      },\n    );\n  }\n\n  productDecreaseQuantity() {\n    const { numberProductsCart } = this.state;\n    this.setState(\n      (_prevState) => ({\n        numberProductsCart: _prevState.numberProductsCart - 1,\n      }),\n      () => {\n        if (numberProductsCart <= 0) return this.setState({ numberProductsCart: 0 });\n        // Talvez seja interessante chamar a função removeProduct quando a quantidade for zero;\n        this.multiplyPrice();\n      },\n    );\n  }\n\n  multiplyPrice() {\n    const { numberProductsCart } = this.state;\n    const {\n      product: { price },\n    } = this.props;\n    this.setState({ totalPrice: numberProductsCart * price });\n  }\n\n  render() {\n    const {\n      props: { product, removeProduct },\n      state: { numberProductsCart, totalPrice },\n    } = this;\n    const { title, thumbnail, id } = product;\n    return (\n      <div className=\"product-cart-body\" id={ id }>\n        <button\n          type=\"button\"\n          className=\"button-remove-product\"\n          onClick={ removeProduct }\n        >\n          X\n        </button>\n        <section className=\"body-product\">\n          <img\n            width=\"150px\"\n            src={ thumbnail }\n            alt={ `Imagem do produto ${title}` }\n          />\n        </section>\n        <section className=\"product-name\">\n          <p data-testid=\"shopping-cart-product-name\">{title}</p>\n        </section>\n        <section className=\"add-product-body\">\n          <button\n            type=\"button\"\n            className=\"btn-product btn-decrease\"\n            data-testid=\"product-decrease-quantity\"\n            onClick={ this.productDecreaseQuantity }\n          >\n            -\n          </button>\n          <p\n            className=\"number-products-cart\"\n            data-testid=\"shopping-cart-product-quantity\"\n          >\n            {numberProductsCart}\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn-product btn-add\"\n            data-testid=\"product-increase-quantity\"\n            onClick={ this.productIncreaseQuantity }\n          >\n            +\n          </button>\n        </section>\n        <section className=\"price-body\">{`R$ ${totalPrice}`}</section>\n      </div>\n    );\n  }\n}\n\nProductCart.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n  removeProduct: PropTypes.func.isRequired,\n};\n\nexport default ProductCart;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductCart from '../Components/ProductCart/ProductCart';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.importFromStorage = this.importFromStorage.bind(this);\n    this.mapProducts = this.mapProducts.bind(this);\n    this.recoveryTotalPrice = this.recoveryTotalPrice.bind(this);\n    this.removeProduct = this.removeProduct.bind(this);\n    this.state = {\n      totalPrice: 0,\n      shoppingCart: [],\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('cart') === null) {\n      localStorage.setItem('cart', JSON.stringify([]));\n    } else {\n      this.importFromStorage();\n    }\n  }\n\n  importFromStorage() {\n    const shoppingCart = JSON.parse(localStorage.getItem('cart'));\n    this.setState({\n      shoppingCart,\n    }, () => this.recoveryTotalPrice());\n  }\n\n  recoveryTotalPrice() {\n    const { shoppingCart } = this.state;\n    const totalPrice = shoppingCart.reduce((acc, product) => {\n      acc += product.price;\n      return acc;\n    }, 0);\n\n    this.setState({ totalPrice });\n  }\n\n  removeProduct({ target }) {\n    target.parentNode.parentNode.removeChild(target.parentNode);\n  }\n\n  mapProducts() {\n    const { shoppingCart } = this.state;\n    return shoppingCart.map((product) => (\n      <ProductCart\n        key={ product.id }\n        product={ product }\n        removeProduct={ this.removeProduct }\n      />\n    ));\n  }\n\n  render() {\n    const emptyCartMessage = (\n      <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n    );\n    const { totalPrice, shoppingCart } = this.state;\n    const priceConverted = (\n      new Intl.NumberFormat('pr-BR', {\n        style: 'currency',\n        currency: 'BRL',\n      }).format(totalPrice)\n    );\n    return (\n      <main className=\"shopping-cart-page\">\n        <header className=\"header-cart\">\n          <Link to=\"/\">\n            Voltar\n          </Link>\n          <h1>Carrinho de Compras</h1>\n        </header>\n        <section className=\"products\">\n          { shoppingCart.length === 0 ? emptyCartMessage : this.mapProducts() }\n        </section>\n        <section className=\"total-price\">\n          <p>\n            { `Valor total da compra: ${priceConverted}` }\n          </p>\n        </section>\n        <button type=\"button\"> Finalizar Compra </button>\n      </main>\n    );\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport AddToCart from '../Components/AddToCart/AddToCart';\nimport ButtonCart from '../Components/ButtonCart/ButtonCart';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {},\n    };\n    this.retrieveFromLocalStorage = this.retrieveFromLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.retrieveFromLocalStorage();\n  }\n\n  retrieveFromLocalStorage() {\n    const selectedProduct = localStorage.getItem('selectedProduct');\n    const product = JSON.parse(selectedProduct);\n    this.setState({ product });\n    // aqui talves tenha que apagar o produto do local storage depois\n  }\n\n  render() {\n    const {\n      product: { title, thumbnail, price }, product,\n    } = this.state;\n    return (\n      <main className=\"product-details-page\">\n        <header className=\"header-product-details\">\n          <ButtonCart />\n        </header>\n        <div data-testid=\"product-detail-name\">\n          <p>{title}</p>\n          <img width=\"100px\" src={ thumbnail } alt={ title } />\n          <p>\n            {new Intl.NumberFormat('pr-BR', {\n              style: 'currency',\n              currency: 'BRL',\n            }).format(price)}\n          </p>\n          <AddToCart\n            selectedProduct={ product }\n            dataTestId=\"product-detail-add-to-cart\"\n          />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport ProductDetails from './pages/ProductDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename=\"/trybe-project-frontend-online-store\">\n          <Switch>\n            <Route path=\"/product-details\" component={ ProductDetails } />\n            <Route path=\"/cart\" component={ Cart } />\n            <Route exact path=\"/\" component={ Home } />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}